{"ast":null,"code":"var _jsxFileName = \"/Users/ananaumova/REACT/LESSONS/lesson09.10/client/src/pages/register/index.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register, resetState } from \"../../redux/slice/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./styles.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    isLoading,\n    isError,\n    isSuccess,\n    message\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (isSuccess) {\n      navigate(\"/login\");\n    }\n    return () => {\n      dispatch(resetState()); //call on dismantling  component\n    };\n  }, [isSuccess, navigate, dispatch]);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    email,\n    password,\n    confirmPassword\n  } = formData;\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not mach\");\n      return;\n    }\n    dispatch(register({\n      email,\n      password\n    }));\n  }\n  console.log(password, confirmPassword);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        placeholder: \"Email\",\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: handleChange,\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        placeholder: \"Confirm Password\",\n        onChange: handleChange,\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: \"5px\"\n        },\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }, this), isSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Success\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"PRQdFX6hQyTwAUPg4UR+kY8HVes=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","register","resetState","useNavigate","styles","jsxDEV","_jsxDEV","Register","_s","dispatch","navigate","isLoading","isError","isSuccess","message","state","auth","formData","setFormData","email","password","confirmPassword","handleChange","event","name","value","target","handleSubmit","e","preventDefault","alert","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","container","onChange","type","placeholder","style","padding","_c","$RefreshReg$"],"sources":["/Users/ananaumova/REACT/LESSONS/lesson09.10/client/src/pages/register/index.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register, resetState } from \"../../redux/slice/authSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nfunction Register() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const { isLoading, isError, isSuccess, message } = useSelector(\r\n    (state) => state.auth\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (isSuccess) {\r\n      navigate(\"/login\");\r\n    }\r\n    return () => {\r\n      dispatch(resetState()); //call on dismantling  component\r\n    };\r\n  }, [isSuccess, navigate, dispatch]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const { email, password, confirmPassword } = formData;\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not mach\");\r\n      return;\r\n    }\r\n\r\n    dispatch(register({ email, password }));\r\n  }\r\n\r\n  console.log(password, confirmPassword);\r\n  if (isLoading) return <h2>loading...</h2>;\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className={styles.container}>\r\n        <input\r\n          onChange={handleChange}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          style={{ padding: \"5px\" }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          onChange={handleChange}\r\n          style={{ padding: \"5px\" }}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n          placeholder=\"Confirm Password\"\r\n          onChange={handleChange}\r\n          style={{ padding: \"5px\" }}\r\n        />\r\n        <button type=\"submit\" style={{ padding: \"5px\" }}>\r\n          Register\r\n        </button>\r\n      </form>\r\n      {isError && <p>{message}</p>}\r\n      {isSuccess && <p>Success</p>}\r\n    </div>\r\n  );\r\n}\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}