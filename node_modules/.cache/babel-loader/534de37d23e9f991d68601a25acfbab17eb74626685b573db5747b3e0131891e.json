{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nconst API_URL = \"http://localhost:5001/api/auth/\";\nexport const register = createAsyncThunk(\"auth/register\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(API_URL + \"register\", userData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nexport const login = createAsyncThunk(\"auth/login\", async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(API_URL + \"login\", userData);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null,\n    isLoading: false,\n    isError: false,\n    isSuccess: false,\n    message: \"\"\n  },\n  reducers: {\n    resetState: state => {\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.message = \"\";\n    },\n    logout: state => {\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem(\"token\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, state => {\n      state.isLoading = false;\n      state.isSuccess = true;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.token = action.payload.token;\n      state.user = jwtDecode(action.payload.token);\n      localStorage.setItem(\"token\", action.payload.token);\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport default authSlice.reducer;\nexport const {\n  resetState\n} = authSlice.actions;\nexport const {\n  logout\n} = authSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","jwtDecode","API_URL","register","userData","rejectWithValue","response","post","data","error","message","login","authSlice","name","initialState","user","token","isLoading","isError","isSuccess","reducers","resetState","state","logout","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","rejected","action","payload","setItem","reducer","actions"],"sources":["/Users/ananaumova/REACT/1/src/redux/slice/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst API_URL = \"http://localhost:5001/api/auth/\";\r\n\r\nexport const register = createAsyncThunk(\r\n  \"auth/register\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(API_URL + \"register\", userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(API_URL + \"login\", userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: null,\r\n    token: null,\r\n    isLoading: false,\r\n    isError: false,\r\n    isSuccess: false,\r\n    message: \"\",\r\n  },\r\n  reducers: {\r\n    resetState: (state) => {\r\n      state.isError = false;\r\n      state.isLoading = false;\r\n      state.isSuccess = false;\r\n      state.message = \"\";\r\n    },\r\n    logout: (state) => {\r\n      state.user = null;\r\n      state.token = null;\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(register.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(register.fulfilled, (state) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isSuccess = true;\r\n        state.token = action.payload.token;\r\n        state.user = jwtDecode(action.payload.token);\r\n        localStorage.setItem(\"token\", action.payload.token);\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.isLoading = false;\r\n        state.isError = true;\r\n        state.message = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\nexport const { resetState } = authSlice.actions;\r\nexport const { logout } = authSlice.actions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}